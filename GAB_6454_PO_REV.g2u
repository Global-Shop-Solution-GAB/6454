Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Variable.UDT.uPOChange.Define("SEQ",String)
Variable.UDT.uPOChange.Define("CHANGE",String)
Variable.UDT.uPOChange.Define("BEFORE",String)
Variable.UDT.uPOChange.Define("AFTER",String)
Variable.uGlobal.uPOChange.Declare("uPOChange")
Program.Sub.Preflight.End

Program.Sub.Main.Start
'This GAB script tracks changes made to a PO. The changes are stored into a new table called GAB_6454_PO_REV.
'Tracking the following line items: part number, quantity, price, discount percent, apply discount, ship-to-ID
'Tracking the following header items: terms, discount percent, apply discount to all line items

'How the script works:
'- When opening a PO, a reference row will be created (a PO and a rev with seq 00)
'- Any line addition, deletion, and modification will be stored using pre-save hook and/or pre-delete hook on QTE201L
'- Any header information changes will be stored using pre-save hook on QTE200
'- When exiting the open PO screen, the script checks if there are any reference rows which have no changes

'Created by: Maximilian Hertanto (17 May 2015)
'Updated:
'- 18 May 2015: Adding a new hook (10710) to change the label in Script 1 button
'- 18 May 2015: Adding part changes tracking in addModifyLine
'- 18 May 2015: deleteReference has been modified to allow deletion of all PO reference rows which have no changes made
'- 20 May 2015: Add a zero before decimal separators on discount percent
'- 24 May 2015: In addReference when the rev is greater than 01, the previous rev seq is changed to ZZ. Previosly the previous rev was deleted
'- 24 May 2015: In deleteReference the deletion is modified to be based on seq ZZ and USERID. Also add the deletion of an empty rev 01
'- 24 May 2015: In addReference, a check point is created to detect if the selected rev is opened by another user
'- 24 May 2015: In addReference, PO rev that is currently opened by a user has an extra ZZ seq
'- 24 May 2015: Part number is shown in adding or deleting a line
'- 14 June 2015: Add a new subroutine called deleteZZ, it is placed on entry hook to clear out any ZZ sequences generated by the user from previous opening of PO screen
'- 28 Jan 2016: Major rewrite on the code, more emphasis on simplifications
'- 28 Jan 2016: Able to track changes of due dates in PO header and item promised date in PO line

V.Local.bExist.Declare
V.Local.sFieldList.Declare
V.Local.sDate.Declare
V.Local.sFileName.Declare
V.Local.bExists.Declare

F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

F.ODBC.Connection!conx.TableExists("GAB_6454_PO_REV",V.Local.bExist)
F.Intrinsic.Control.If(V.Local.bExist,=,False)
	F.Intrinsic.UI.InvokeWaitDialog("Creating custom table to store PO changes","PO Revision [APAC]")
	F.ODBC.Connection!conx.Execute("CREATE TABLE GAB_6454_PO_REV(PURCHASE_ORDER VARCHAR(7),REV VARCHAR(2),SEQ VARCHAR(2),LINE VARCHAR(4),ACTION VARCHAR(2),CHANGE VARCHAR(30),BEFORE VARCHAR(30),AFTER VARCHAR(30),USERID VARCHAR(8),DATE_CHG DATE,TIME_CHG CHAR(8),PRGM VARCHAR(15));")
	F.Intrinsic.UI.CloseWaitDialog
'		F.Intrinsic.Control.Else
'			F.ODBC.Connection!conx.FieldExists("GAB_6454_PO_REV","DATE_CHG",V.Local.bExist)
'			F.Intrinsic.Control.If(V.Local.bExist,=,False)
'				F.Intrinsic.UI.InvokeWaitDialog("Updating custom table","PO Revision [APAC]")
'				F.ODBC.Connection!conx.Execute("alter table GAB_6454_PO_REV rename column DATE to DATE_CHG")
'				F.ODBC.Connection!conx.Execute("alter table GAB_6454_PO_REV rename column TIME to TIME_CHG")
'				F.Intrinsic.UI.CloseWaitDialog
'			F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Only for open PO
F.Intrinsic.Control.If(V.Caller.Switches,=,"O")
	'PO entry hook
'	F.Intrinsic.Control.If(V.Caller.Hook,=,16840)
'		F.Intrinsic.Control.CallSub(Deletezz)
'	F.Intrinsic.Control.EndIf
	'PO change hook
	F.Intrinsic.Control.if(V.Caller.Hook,=,16855)
		F.Intrinsic.Control.CallSub(Deletezz)
		F.Intrinsic.Control.CallSub(Addreference)
		F.Intrinsic.Control.CallSub(CaptureValues)
	'PO exit hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,16860)
		F.Intrinsic.Control.CallSub(Deletezz)
		F.Intrinsic.Control.CallSub(Deletereference)
	'PO pre-save hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,16870)
		F.Intrinsic.Control.CallSub(Modifyheader)
		
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.ElseIf(V.Caller.Switches,=,"U")
	'PO line pre-save hook
	F.Intrinsic.Control.If(V.Caller.Hook,=,17060)
		F.Intrinsic.Control.CallSub(Addmodifyline)
	'PO line pre-delete hook
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,17070)
		F.Intrinsic.Control.CallSub(Deleteline)
	'Update Action Delete	
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,17010)
		F.Intrinsic.Control.CallSub(Hook17010)
	'Close PO line screen
	F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,17150)
		F.Intrinsic.Control.CallSub(Hook17150)		
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Delete PO record
F.Intrinsic.Control.If(V.Caller.Hook,=,16884)
	F.Intrinsic.Control.CallSub(Hook16884)
'PO populate hook
F.Intrinsic.Control.ElseIf(V.Caller.Hook,=,16850)
	Variable.Passed.000065.Set("View Rev")
	F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sDate)
	F.Intrinsic.String.Concat(V.System.Temp,"\GSS\GAB_6454_", V.Caller.User, "_", V.Local.sDate, "_PO_0000000.txt", V.Local.sFileName)
	
	F.Intrinsic.File.Exists(V.Local.sFileName,V.Local.bExists)

	F.Intrinsic.Control.If(V.Local.bExists,=,True)
		F.Intrinsic.File.DeleteFile(V.Local.sFileName)
		F.Intrinsic.Control.CallSub(CaptureValues)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf	

'Only for view PO
F.Intrinsic.Control.If(V.Caller.Switches,=,"V")
	F.Intrinsic.Control.If(V.Caller.Hook,=,16850)
		Variable.Passed.000072.Set("View Rev")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.ODBC.Connection!conx.Close

Program.Sub.Main.End

Program.Sub.addModifyLine.Start
'Variables for setup
V.Local.sPO.Declare(String)
V.Local.sPOLine.Declare(String)
V.Local.sRecordNo.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.iSeq.Declare(Long)
V.Local.iSeq.Set(0)
V.Local.sCurTime.Declare(String)

V.Local.i1.Declare(Long)
V.Local.sQuery.Declare(String)

'Variables to identify changes
V.Local.sApplyDisc.Declare(String)
V.Local.iModified.Declare(Long)
V.Local.iModified.Set(0)
V.Local.sScreenVal.Declare(String)
V.Local.sPCCVal.Declare(String)
V.Local.fScreenVal.Declare(Float)
V.Local.fValChange.Declare(Float)
V.Local.dPromDate.Declare(Date)
V.Local.sPartNum.Declare(String)
V.Local.sPartRev.Declare(String)
V.Local.sPromDate.Declare(String)
V.Local.sUser.Declare
V.Local.sDate.Declare
V.Local.iPromDate.Declare

'Reformat PO number to 7 characters
V.Local.sPO.Set(Variable.Passed.008002)
F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)

'Reformat line number to 3 characters
'V.Local.sPOLine.Set(V.Passed.000051)
v.Local.sRecordNo.Set(Variable.Passed.008001)
'F.Intrinsic.String.LPad(V.Local.sPOLine,"0",3,V.Local.sPOLine)
'F.Intrinsic.String.Concat(V.Local.sPOLine,V.Passed.000090,V.Local.sRecordNo)

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT REV FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.EndIf
V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
F.ODBC.conx!rstQTE.Close

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

'Check if user clicked Delete button before
F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND ACTION = 'D*' ",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	F.Intrinsic.String.Build("Delete from GAB_6454_PO_rev where Purchase_Order = '{0}' and Action = 'D*';", V.Local.sPO, V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT * FROM V_PO_LINES WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND RECORD_NO = '",V.Local.sRecordNo.Trim,"' AND FLAG_REC_TYPE = 'L'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
'Create datatable to store changes
F.Data.DataTable.Create("dtChange",True)
F.Data.DataTable.AddColumn("dtChange","Seq","String")
F.Data.DataTable.AddColumn("dtChange","Change","String")
F.Data.DataTable.AddColumn("dtChange","Before","String")
F.Data.DataTable.AddColumn("dtChange","After","String")
V.Local.sUser.Set(V.Caller.User)
F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
'Check if it is a new added line
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	'Show added part number
	F.Intrinsic.String.Trim(Variable.Passed.000008,V.Local.sPartNum)
	F.Intrinsic.String.Trim(Variable.Passed.000009,V.Local.sPartRev)
	F.Intrinsic.String.GSSPartString(V.Local.sPartNum,V.Local.sPartRev,V.Local.sPartNum)
	F.Intrinsic.String.LPad(V.Local.iSeq,"0",2,V.Local.sSeq)
	F.Intrinsic.String.Build("insert into GAB_6454_PO_rev(PURCHASE_ORDER, rev, seq, line, action, change, after, userid, date_chg, time_chg, prgm) values('{0}','{1}','{2}','{3}','A','{4}','{5}','{6}','{7}','{8}','{9}');",V.Local.sPO,V.Local.sRev,V.Local.sSeq,V.Local.sRecordNo,"Part Number",V.Local.sPartNum.Trim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,Variable.Passed.000135,V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.Else
	'Check if order quantity changes
	V.Local.fScreenVal.Set(Variable.Passed.000021)
	F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!QTY_ORDER,V.Local.fValChange)
	F.Intrinsic.Control.If(V.Local.fValChange,<>,0.0)
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!QTY_ORDER,"#,0.0000",V.Local.sPCCVal)
		F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Quantity","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if cost changes
	V.Local.fScreenVal.Set(Variable.Passed.000022)
	F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!COST_6_DEC,V.Local.fValChange)
	F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!COST_6_DEC,"#,0.000000",V.Local.sPCCVal)
	F.Intrinsic.Control.If(V.Local.fValChange,<>,0)
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!COST_6_DEC,"#,0.0000",V.Local.sPCCVal)
		F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Unit Price","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if discount percet changes
	V.Local.fScreenVal.Set(Variable.Passed.000026)
	F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!DISCOUNT,V.Local.fValChange)
	F.Intrinsic.Control.If(V.Local.fValChange,<>,0.0)
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!DISCOUNT,"#,0.0000",V.Local.sPCCVal)
		F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Discount Percent","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if discount applied flag is changed
'	F.Intrinsic.Control.If(V.Local.sApplyDisc,<>,V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT)
'		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Discount Applied","sPCCVal",V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT,"sScreenVal",V.Local.sApplyDisc)
'		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
'		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
'	F.Intrinsic.Control.EndIf
	'Check if ship to ID is changed
'	V.Local.sScreenVal.Set(V.Passed.000088)
'	V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!PO_SHIP_ID)
'	F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
'		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Ship to ID","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
'		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
'		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
'	F.Intrinsic.Control.EndIf
	'Check if part changes
	F.Intrinsic.String.Trim(Variable.Passed.000008,V.Local.sPartNum)
	F.Intrinsic.String.Trim(Variable.Passed.000009,V.Local.sPartRev)
	F.Intrinsic.String.RPad(V.Local.sPartNum," ",17,V.Local.sPartNum)
	F.Intrinsic.String.Concat(V.Local.sPartNum,V.Local.sPartRev,V.Local.sScreenVal)
	V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!PART)
	F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Part Number","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'Check if item due date is changed
	V.Local.sScreenVal.Set(Variable.Passed.000014)
	F.Intrinsic.Control.If(V.Caller.GSSVersion,<=,"2016.1")
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!DATE_DUE_LINE,"MMDDYY",V.Local.sPCCVal)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!DATE_DUE_LINE,"YYYYMMDD",V.Local.sPCCVal)
	F.Intrinsic.Control.EndIf
'	V.Local.sScreenVal.Set(V.Passed.000011)
'	V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!ITEM_PROMISE_DT)
	F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
		V.Local.sPromDate.Set(Variable.Passed.000014)
		F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"000000")
			V.Local.sScreenVal.Set("")
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Caller.GSSVersion,<=,"2019.1")
				F.Intrinsic.String.Len(V.Local.sPromDate,V.Local.iPromDate)
				f.Intrinsic.Control.If(V.Local.iPromDate.Trim,=,7)
					F.Intrinsic.String.LPad(V.Local.sPromDate,"0",8,V.Local.sPromDate)
				f.Intrinsic.Control.EndIf
				F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYYYY",V.Local.dPromDate)
			F.Intrinsic.Control.Else
				F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"YYYYMMDD",V.Local.dPromDate)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sScreenVal)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!DATE_DUE_LINE,"YYYYMMDD",V.Local.sPCCVal)
'		V.Local.sPromDate.Set(V.ODBC.conx!rstQTE.FieldValTrim!ITEM_PROMISE_DT)
		F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"19000101")
			V.Local.sPCCVal.Set("")
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldVal!DATE_DUE_LINE,"DD/MM/YYYY",V.Local.sPCCVal)
'			F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYY",V.Local.dPromDate)
'			F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sPCCVal)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Due Date","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
		F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
		F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
	F.Intrinsic.Control.EndIf
	'If there are changes
	F.Intrinsic.Control.If(V.DataTable.dtChange.RowCount,>,0)
		F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtChange.RowCount--,1)
			F.Intrinsic.String.Build("insert into GAB_6454_PO_rev(PURCHASE_ORDER, rev, seq, line, action, change, before, after, userid, date_chg, time_chg, prgm) values('{0}','{1}','{2}','{3}','M','{4}','{5}','{6}','{7}','{8}','{9}','{10}');",V.Local.sPO,V.Local.sRev,V.DataTable.dtChange(V.Local.i1).Seq!FieldValTrim,V.Local.sRecordNo,V.DataTable.dtChange(V.Local.i1).Change!FieldValTrim,V.DataTable.dtChange(V.Local.i1).Before!FieldValTrim,V.DataTable.dtChange(V.Local.i1).After!FieldValTrim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,Variable.Passed.000135,V.Local.sQuery)
			F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.Control.Next(V.Local.i1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Data.DataTable.Close("dtChange")

Program.Sub.addModifyLine.End

Program.Sub.addReference.Start
'This subprogram creates a reference row entry in GAB_6454_PO_REV table to state which PO and rev number it is currently at. The reference row is signified by '00' on SEQ.
V.Local.sPO.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sPrevRev.Declare(String)
V.Local.iRevCount.Declare(Long)
V.Local.sQuery.Declare(String)
V.Local.sMessage.Declare(String)
V.Local.sCurTime.Declare(String)
V.Local.sUser.Declare
V.Local.sDate.Declare

F.Intrinsic.Control.CallSub(Deletereference)

'Reformat PO number to 7 characters
f.Intrinsic.Control.If(v.Caller.Hook,=,17060)
	V.Local.sPO.set(Variable.Passed.008002)
f.Intrinsic.Control.ElseIf(v.Caller.Hook,=,17070)
	V.Local.sPO.Set(Variable.Passed.008002)
F.Intrinsic.Control.Else
	V.Local.sPO.set(Variable.Passed.000008)
f.Intrinsic.Control.EndIf
F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)

'Get the previous rev for the selected PO
F.Intrinsic.String.Concat("SELECT REV FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldValTrim!REV)
	F.Intrinsic.Math.ConvertToLong(V.Local.sRev,V.Local.iRevCount)
	F.Intrinsic.Math.Sub(V.Local.iRevCount,1,V.Local.iRevCount)
	F.Intrinsic.String.LPad(V.Local.iRevCount,"0",2,V.Local.sPrevRev)
	F.Intrinsic.String.Concat("SELECT USERID FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND REV = '",V.Local.sPrevRev.Trim,"' AND SEQ = 'ZZ'",V.Local.sQuery)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTEOLD",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.conx!rstQTEOLD.EOF,=,False)
		F.Intrinsic.String.Concat("This PO is currently being opened by ",V.ODBC.conx!rstQTEOLD.FieldValTrim!USERID,V.Local.sMessage)
		F.Intrinsic.UI.Msgbox(V.Local.sMessage,"NOTIFICATION")
		F.ODBC.conx!rstQTEOLD.Close
		F.ODBC.conx!rstQTE.Close
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND REV = '",V.Local.sRev.Trim,"' AND SEQ <> '00' AND SEQ <> 'ZZ'",V.Local.sQuery)
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstRevCheck",V.Local.sQuery)
		F.Intrinsic.Control.If(V.ODBC.conx!rstRevCheck.EOF,=,False)
			F.Intrinsic.Math.Add(V.Local.iRevCount,2,V.Local.iRevCount)
			F.Intrinsic.String.LPad(V.Local.iRevCount,"0",2,V.Local.sRev)
		F.Intrinsic.Control.EndIf
		F.ODBC.conx!rstRevCheck.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	V.Local.iRevCount.Set(1)
	V.Local.sRev.Set("01")
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND REV = '",V.Local.sRev.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRW("rstQTE",V.Local.sQuery)
V.Local.sUser.Set(V.Caller.User)
F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	'Insert a reference row in the table that defines which rev number it is currently at
	F.Intrinsic.Control.If(V.Local.iRevCount,=,1)
		'First revision
		F.Intrinsic.Control.If(V.Local.sPO,<>,"0000000")
			F.Intrinsic.String.Build("insert into GAB_6454_PO_REV(PURCHASE_ORDER, rev, seq, userid, date_chg, time_chg) values('{0}','{1}','00','{2}','{3}','{4}');",V.Local.sPO,V.Local.sRev,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
			F.ODBC.Connection!conx.Execute(V.Local.sQuery)
			F.Intrinsic.String.Build("insert into GAB_6454_PO_REV(PURCHASE_ORDER, rev, seq, userid, date_chg, time_chg) values('{0}','00','ZZ','{1}','{2}','{3}');",V.Local.sPO,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
			F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.Control.EndIf	
	F.Intrinsic.Control.Else
		'Other than the first revision, change the old reference sequence to ZZ and create a new one
		F.Intrinsic.Math.Sub(V.Local.iRevCount,1,V.Local.iRevCount)
		F.Intrinsic.String.LPad(V.Local.iRevCount,"0",2,V.Local.sPrevRev)
		F.Intrinsic.String.Build("update GAB_6454_PO_rev set seq = 'ZZ', USERID = '{2}' where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = '00'",V.Local.sPO.Trim,V.Local.sPrevRev.Trim,V.Local.sUser.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.String.Build("insert into GAB_6454_PO_REV(PURCHASE_ORDER, rev, seq, userid, date_chg, time_chg) values('{0}','{1}','00','{2}','{3}','{4}');",V.Local.sPO,V.Local.sRev,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

Program.Sub.addReference.End

Program.Sub.deleteLine.Start
V.Local.sPO.Declare(String)
V.Local.sPOLine.Declare(String)
V.Local.sRecordNo.Declare(String)
V.Local.sQuery.Declare(String)
V.Local.SQLquery.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.iSeq.Declare(Long)
V.Local.iSeq.Set(0)
V.Local.sCurTime.Declare(String)
V.Local.sDate.Declare
V.Local.sUser.Declare

V.Local.sPartNum.Declare(String)
V.Local.sPartRev.Declare(String)

'Reformat po number to 7 characters
V.Local.sPO.Set(Variable.Passed.008002)
F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)

V.Local.sUser.Set(V.Caller.User)

'Reformat line number to 3 characters
v.Local.sRecordNo.Set(Variable.Passed.008001)
'V.Local.sPOLine.Set(V.Passed.000051)
'F.Intrinsic.String.LPad(V.Local.sPOLine,"0",3,V.Local.sPOLine)
'F.Intrinsic.String.Concat(V.Local.sPOLine,V.Passed.000090,V.Local.sRecordNo)

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.EndIf
V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
F.ODBC.conx!rstQTE.Close

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT PURCHASE_ORDER FROM PO_LINES WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND RECORD_NO = '",V.Local.sRecordNo.Trim,"' AND FLAG_REC_TYPE = 'L'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	F.Intrinsic.String.LPad(V.Local.iSeq,"0",2,V.Local.sSeq)
	'Show deleted part number
	F.Intrinsic.String.Trim(Variable.Passed.000008,V.Local.sPartNum)
	F.Intrinsic.String.Trim(Variable.Passed.000009,V.Local.sPartRev)
	F.Intrinsic.String.GSSPartString(V.Local.sPartNum,V.Local.sPartRev,V.Local.sPartNum)
	F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
	F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
	F.Intrinsic.String.Build("insert into GAB_6454_PO_rev(PURCHASE_ORDER, rev, seq, line, action, change, before, userid, date_chg, time_chg ,prgm) values('{0}','{1}','{2}','{3}','D*','{4}','{5}','{6}','{7}','{8}','{9}');",V.Local.sPO.Trim,V.Local.sRev.Trim,V.Local.sSeq.Trim,V.Local.sRecordNo.Trim,"",V.Local.sPartNum.Trim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,Variable.Passed.000135,V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

Program.Sub.deleteLine.End

Program.Sub.modifyHeader.Start
V.Local.sPO.Declare(String)
V.Local.i1.Declare(Long)
V.Local.sQuery.Declare(String)
V.Local.SQLquery.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sSeq.Declare(String)
V.Local.iSeq.Declare(Long)
V.Local.iSeq.Set(0)
V.Local.sCurTime.Declare(String)
V.Local.sDate.Declare
V.Local.sUser.Declare
V.Local.fDisc.Declare
V.Local.sFileName.Declare
V.Local.sFile.Declare
V.Local.sTemp.Declare
V.Local.bExists.Declare

'Variables for changes identification
V.Local.iModified.Declare(Long)
V.Local.iModified.Set(0)
V.Local.sScreenVal.Declare(String)
V.Local.sPCCVal.Declare(String)
V.Local.fScreenVal.Declare(Float)
V.Local.fValChange.Declare(Float)
V.Local.sPromDate.Declare(String)
V.Local.dPromDate.Declare(String)
V.Local.iScreenVal.Declare

'Reformat PO number to 7 characters
V.Local.sPO.Set(Variable.Passed.000008)
F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)

F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sDate)
F.Intrinsic.String.Concat(V.System.Temp,"\GSS\GAB_6454_", V.Caller.User, "_", V.Local.sDate, "_PO_", V.Local.sPO, ".txt", V.Local.sFileName)
F.Intrinsic.File.File2String(V.Local.sFileName,V.Local.sFile)
F.Intrinsic.String.Split(V.Local.sFile.Trim,"*!*",V.Local.sTemp)

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT PURCHASE_ORDER, REV FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.EndIf
V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
F.ODBC.conx!rstQTE.Close

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.Concat("SELECT DISCOUNT_A, TERMS, DATE_DUE FROM PO_HEADER WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND REC_TYPE = 'A'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)

'Create datatable to store changes
F.Data.DataTable.Create("dtChange",True)
F.Data.DataTable.AddColumn("dtChange","Seq","String")
F.Data.DataTable.AddColumn("dtChange","Change","String")
F.Data.DataTable.AddColumn("dtChange","Before","String")
F.Data.DataTable.AddColumn("dtChange","After","String")
'Check if apply discount to all lines is checked
'V.Local.sScreenVal.Set(V.Passed.000047)
'F.Intrinsic.Control.If(V.Local.sScreenVal,<>,V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT)
'	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Apply Discount to All","sPCCVal",V.ODBC.conx!rstQTE.FieldValTrim!FLAG_ALWAYS_DISCOUNT,"sScreenVal",V.Local.sScreenVal.Trim)
'	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
'	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
'F.Intrinsic.Control.EndIf

'Check if terms changes
V.Local.sScreenVal.Set(Variable.Passed.000037)
'V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!TERMS)
V.Local.sPCCVal.Set(V.Local.sTemp(1).Trim)
F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Terms","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf

'Check if due date changes

V.Local.sScreenVal.Set(Variable.Passed.000029)
F.Intrinsic.Control.If(V.Caller.GSSVersion,=,"2019.1")
	F.Intrinsic.String.Len(V.Local.sScreenVal,V.Local.iScreenVal)
	f.Intrinsic.Control.If(V.Local.iScreenVal,=,7)
		F.Intrinsic.String.LPad(V.Local.sScreenVal,"0",8,V.Local.sScreenVal)
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Date.ConvertDString(V.Local.sScreenVal,"MMDDYYYY",V.Local.dPromDate)
	F.Intrinsic.String.Format(V.Local.dPromDate,"YYYYMMDD",V.Local.sScreenVal)
F.Intrinsic.Control.EndIf
'V.Local.sPCCVal.Set(V.ODBC.conx!rstQTE.FieldValTrim!DATE_DUE)
'F.Intrinsic.Date.ConvertDString(V.Local.sPCCVal,"MMDDYY",V.Local.dPromDate)
'F.Intrinsic.String.Format(V.Local.dPromDate,"YYYYMMDD",V.Local.sPCCVal)
V.Local.sPCCVal.Set(V.Local.sTemp(2).Trim)
F.Intrinsic.Control.If(V.Local.sScreenVal.Trim,<>,V.Local.sPCCVal.Trim)
	V.Local.sPromDate.Set(Variable.Passed.000029)
	F.Intrinsic.Control.If(V.Caller.GSSVersion,=,"2019.1")
		F.Intrinsic.String.Len(V.Local.sPromDate,V.Local.iScreenVal)
		f.Intrinsic.Control.If(V.Local.iScreenVal,=,7)
			F.Intrinsic.String.LPad(V.Local.sPromDate,"0",8,V.Local.sPromDate)
		f.Intrinsic.Control.EndIf
		F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYYYY",V.Local.dPromDate)
		F.Intrinsic.String.Format(V.Local.dPromDate,"YYYYMMDD",V.Local.sPromDate)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"00000000")
		V.Local.sScreenVal.Set("")
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"YYYYMMDD",V.Local.dPromDate)
		F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sScreenVal)
	F.Intrinsic.Control.EndIf
	
	'V.Local.sPromDate.Set(V.ODBC.conx!rstQTE.FieldValTrim!DATE_DUE)
	V.Local.sPromDate.Set(V.Local.sTemp(2).Trim)
'	F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"000000")
	F.Intrinsic.Control.If(V.Local.sPromDate.Trim,=,"00000000")
		V.Local.sPCCVal.Set("")
	F.Intrinsic.Control.Else
'		F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYY",V.Local.dPromDate)
		F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"YYYYMMDD",V.Local.dPromDate)
		F.Intrinsic.String.Format(V.Local.dPromDate,"DD/MM/YYYY",V.Local.sPCCVal)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Due Date","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf

'Check if discount percet changes
V.Local.fScreenVal.Set(Variable.Passed.000031)
V.Local.fDisc.Set(V.Local.sTemp(3))
'F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.ODBC.conx!rstQTE.FieldValFloat!DISCOUNT_A,V.Local.fValChange)
F.Intrinsic.Math.Sub(V.Local.fScreenVal,V.Local.fDisc,V.Local.fValChange)
F.Intrinsic.Control.If(V.Local.fValChange,<>,0.0)
'	F.Intrinsic.String.Format(V.ODBC.conx!rstQTE.FieldValFloat!DISCOUNT_A,"#,0.0000",V.Local.sPCCVal)
	F.Intrinsic.String.Format(V.Local.fDisc,"#,0.0000",V.Local.sPCCVal)
	F.Intrinsic.String.Format(V.Local.fScreenVal,"#,0.0000",V.Local.sScreenVal)
	F.Intrinsic.Control.CallSub(Storechanges,"iModified",V.Local.iModified,"iSeq",V.Local.iSeq,"sChange","Discount Percent","sPCCVal",V.Local.sPCCVal.Trim,"sScreenVal",V.Local.sScreenVal.Trim)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iModified,1,V.Local.iModified)
F.Intrinsic.Control.EndIf

'If there are changes, store to GAB_6454_PO_REV
F.Intrinsic.Control.If(V.DataTable.dtChange.RowCount,>,0)
	F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtChange.RowCount--,1)
		V.Local.sUser.Set(V.Caller.User)
		F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
		F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)
		F.Intrinsic.String.Build("insert into GAB_6454_PO_rev(PURCHASE_ORDER, rev, seq, line, action, change, before, after, userid, date_chg, time_chg, prgm) values('{0}','{1}','{2}','HDR','M','{3}','{4}','{5}','{6}','{7}','{8}','{9}');",V.Local.sPO,V.Local.sRev,V.DataTable.dtChange(V.Local.i1).Seq!FieldValTrim,V.DataTable.dtChange(V.Local.i1).Change!FieldValTrim,V.DataTable.dtChange(V.Local.i1).Before!FieldValTrim,V.DataTable.dtChange(V.Local.i1).After!FieldValTrim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime,Variable.Passed.SYS050,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.Next(V.Local.i1)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close
F.Data.DataTable.Close("dtChange")

F.Intrinsic.File.Exists(V.Local.sFileName,V.Local.bExists)

F.Intrinsic.Control.If(V.Local.bExists,=,True)
	F.Intrinsic.File.DeleteFile(V.Local.sFileName)
F.Intrinsic.Control.EndIf

V.Local.sFile.Set("")

V.Local.sPromDate.Set(Variable.Passed.000029)
F.Intrinsic.Control.If(V.Caller.GSSVersion,=,"2019.1")
	F.Intrinsic.String.Len(V.Local.sPromDate,V.Local.iScreenVal)
	f.Intrinsic.Control.If(V.Local.iScreenVal,=,7)
		F.Intrinsic.String.LPad(V.Local.sPromDate,"0",8,V.Local.sPromDate)
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Date.ConvertDString(V.Local.sPromDate,"MMDDYYYY",V.Local.dPromDate)
	F.Intrinsic.String.Format(V.Local.dPromDate,"YYYYMMDD",V.Local.sPromDate)
F.Intrinsic.Control.EndIf

'Prepare the list of PO header records (Terms, Due Date, and Discount) to be stored in GSS temp folder
F.Intrinsic.Control.If(V.Local.sFile.Trim,=,"")
	F.Intrinsic.String.Concat(V.Local.sPO,"*!*",Variable.Passed.000037,"*!*",V.Local.sPromDate,"*!*",Variable.Passed.000031,V.Local.sFile)
F.Intrinsic.Control.EndIf
F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sFile)

Program.Sub.modifyHeader.End

Program.Sub.deleteReference.Start
V.Local.sPO.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sPrevRev.Declare(String)
V.Local.iRev.Declare(Long)
V.Local.sQuery.Declare(String)
V.Local.sUser.Declare(String)
V.Local.i1.Declare
V.Local.sFilter.Declare
V.Local.sRet.Declare
V.Local.sDate.Declare
V.Local.sFileName.Declare
V.Local.bExists.Declare

F.Intrinsic.String.Trim(V.Caller.User,V.Local.sUser)

'Reformat PO number to 7 characters
V.Local.sPO.Set(Variable.Passed.000008)
F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)

'Delete the reference row from the table if there is no change found
'First get the reference row to identify the rev number
F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE SEQ = 'ZZ' AND USERID = '",V.Local.sUser.Trim,"'",V.Local.sQuery)
F.Data.DataTable.CreateFromSQL("dtQte","conx",V.Local.sQuery)
F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtQte.RowCount--,1)
	F.Intrinsic.Math.ConvertToLong(V.DataTable.dtQte(V.Local.i1).Rev!FieldVal,V.Local.iRev)
	F.Intrinsic.Math.Add(V.Local.iRev,1,V.Local.iRev)
	F.Intrinsic.String.LPad(V.Local.iRev,"0",2,V.Local.sRev)
	F.Intrinsic.String.Build("select PURCHASE_ORDER, rev, seq from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = '01'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.Local.sRev.Trim,V.Local.sQuery)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
		F.Intrinsic.Control.If(V.Local.iRev,=,1)
			F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("update GAB_6454_PO_rev set seq = '00' where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.Intrinsic.Control.EndIf
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and seq = '00'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.Local.sRev.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.Next(V.Local.i1)
F.Data.DataTable.Close("dtQte")

'F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sDate)
'F.Intrinsic.String.Concat(V.System.Temp,"\GSS\GAB_6454_",V.Caller.User,"_",V.Local.sDate,"_PO_", V.Local.sPO, '".txt",V.Local.sFileName)
'F.Intrinsic.File.Exists(V.Local.sFileName,V.Local.bExists)

'F.Intrinsic.Control.If(V.Local.bExists,=,True)
'	F.Intrinsic.File.DeleteFile(V.Local.sFileName)
'F.Intrinsic.Control.EndIf

Program.Sub.deleteReference.End

Program.Sub.deleteZZ.Start
V.Local.sQuery.Declare(String)
V.Local.sUser.Declare

'Delete if there is any existing ZZ sequence from the current user. It is to prevent any ZZ sequence to show up if there is a system glitch.
V.Local.sUser.Set(V.Caller.User)
F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where seq = 'ZZ' and userid = '{0}'",V.Local.sUser.Trim,V.Local.sQuery)
F.ODBC.Connection!conx.Execute(V.Local.sQuery)

Program.Sub.deleteZZ.End

Program.Sub.storeChanges.Start
V.Local.sSeq.Declare(String)

F.Intrinsic.String.LPad(V.Args.iSeq,"0",2,V.Local.sSeq)
F.Data.DataTable.AddRow("dtChange","Seq",V.Local.sSeq,"Change",V.Args.sChange,"Before",V.Args.sPCCVal,"After",V.Args.sScreenVal)

Program.Sub.storeChanges.End

Program.Sub.Hook17010.Start
V.Local.sError.Declare(String)

V.Local.fAfter.Declare
V.Local.fBefore.Declare
V.Local.fAmount.Declare
V.Local.i1.Declare
V.Local.sPO.Declare(String)
V.Local.sDate.Declare
V.Local.sFile.Declare
V.Local.sFileName.Declare
V.Local.sTemp.Declare
V.Local.sQuery.Declare

F.Intrinsic.String.LPad(V.Passed.008002,"0",7,V.Local.sPO)

'Check if user clicked Delete button before
F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '", V.Local.sPO, "' AND ACTION = 'D*' ", V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	F.Intrinsic.String.Build("Update GAB_6454_PO_rev Set Action = 'D' where Purchase_Order = '{0}' and Action = 'D*';", V.Local.sPO, V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.Control.ExitSub

Program.Sub.Hook17010.End

Program.Sub.Hook17150.Start
V.Local.sError.Declare(String)

V.Local.fAfter.Declare
V.Local.fBefore.Declare
V.Local.fAmount.Declare
V.Local.i1.Declare
V.Local.sPO.Declare(String)
V.Local.sDate.Declare
V.Local.sFile.Declare
V.Local.sFileName.Declare
V.Local.sTemp.Declare
V.Local.sQuery.Declare

F.Intrinsic.String.LPad(Variable.Passed.008002,"0",7,V.Local.sPO)

'Check if user clicked Delete button before
F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '", V.Local.sPO, "' AND ACTION = 'D*' ", V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,False)
	F.Intrinsic.String.Build("Delete from GAB_6454_PO_rev where Purchase_Order = '{0}' and Action = 'D*';", V.Local.sPO, V.Local.sQuery)
	F.ODBC.Connection!conx.Execute(V.Local.sQuery)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.Control.ExitSub

Program.Sub.Hook17150.End

Program.Sub.Hook16884.Start
V.Local.sError.Declare(String)

V.Local.sPO.Declare(String)
V.Local.sDate.Declare
V.Local.sCurTime.Declare
V.Local.sRev.Declare
V.Local.sSeq.Declare
V.Local.sUser.Declare
V.Local.sQuery.Declare
V.Local.iSeq.Declare
V.Local.iRev.Declare
V.Local.i1.Declare

V.Local.sUser.Set(V.Caller.User)

F.Intrinsic.String.LPad(V.Passed.000008,"0",7,V.Local.sPO)
F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sDate)
F.Intrinsic.String.Format(V.Ambient.Time,"Hh:Nn:Ss",V.Local.sCurTime)

F.Intrinsic.String.Build("Select sum(qty_Received) as TotalQty From V_PO_LINES Where Purchase_Order = '{0}';",V.Local.sPO.Trim,V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstPO",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstPO.EOF,=,False)
	F.Intrinsic.Control.If(V.ODBC.conx!rstPO.FieldValFloat!TotalQty,<>,0)
		F.ODBC.conx!rstPO.Close
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstPO.Close

'Get rev number from the reference row in the table
F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ = '00'",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.CallSub(Addreference)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.EndIf
V.Local.sRev.Set(V.ODBC.conx!rstQTE.FieldVal!REV)
F.ODBC.conx!rstQTE.Close

'Check existing sequence for the rev number
F.Intrinsic.String.Concat("SELECT TOP 1 SEQ FROM GAB_6454_PO_REV WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND SEQ <> '00' AND REV = '",V.Local.sRev.Trim,"' ORDER BY SEQ DESC",V.Local.sQuery)
F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
	V.Local.iSeq.Set(1)
	V.Local.sSeq.Set("01")
F.Intrinsic.Control.Else
	V.Local.sSeq.Set(V.ODBC.conx!rstQTE.FieldValTrim!SEQ)
	F.Intrinsic.Math.ConvertToLong(V.Local.sSeq,V.Local.iSeq)
	F.Intrinsic.Math.Add(V.Local.iSeq,1,V.Local.iSeq)
F.Intrinsic.Control.EndIf
F.ODBC.conx!rstQTE.Close

F.Intrinsic.String.LPad(V.Local.iSeq,"0",2,V.Local.sSeq)

F.Intrinsic.String.Build("insert into GAB_6454_PO_rev(PURCHASE_ORDER, rev, seq, line, action, change, before, userid, date_chg, time_chg, prgm) values('{0}','{1}','{2}','{3}','D','{4}','{5}','{6}','{7}','{8}','{9}');",V.Local.sPO.Trim,V.Local.sRev.Trim,V.Local.sSeq.Trim,"HDR","",V.Local.sPO.Trim,V.Local.sUser.Trim,V.Local.sDate,V.Local.sCurTime, Variable.Passed.SYS050,V.Local.sQuery)
F.ODBC.Connection!conx.Execute(V.Local.sQuery)

F.Intrinsic.String.Concat("SELECT * FROM GAB_6454_PO_REV WHERE SEQ = 'ZZ' AND USERID = '",V.Local.sUser.Trim,"'",V.Local.sQuery)
F.Data.DataTable.CreateFromSQL("dtQte","conx",V.Local.sQuery)
F.Intrinsic.Control.For(V.Local.i1,0,V.DataTable.dtQte.RowCount--,1)
	F.Intrinsic.Math.ConvertToLong(V.DataTable.dtQte(V.Local.i1).Rev!FieldVal,V.Local.iRev)
	F.Intrinsic.Math.Add(V.Local.iRev,1,V.Local.iRev)
	F.Intrinsic.String.LPad(V.Local.iRev,"0",2,V.Local.sRev)
	F.Intrinsic.String.Build("select PURCHASE_ORDER, rev, seq from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = '01'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.Local.sRev.Trim,V.Local.sQuery)
	F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.conx!rstQTE.EOF,=,True)
		F.Intrinsic.Control.If(V.Local.iRev,=,1)
			F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("update GAB_6454_PO_rev set seq = '00' where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.Intrinsic.Control.EndIf
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
		F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = '00'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.Local.sRev.Trim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("delete from GAB_6454_PO_rev where PURCHASE_ORDER = '{0}' and rev = '{1}' and seq = 'ZZ'",V.DataTable.dtQte(V.Local.i1).PURCHASE_ORDER!FieldValTrim,V.DataTable.dtQte(V.Local.i1).Rev!FieldValTrim,V.Local.sQuery)
		F.ODBC.Connection!conx.Execute(V.Local.sQuery)
	F.Intrinsic.Control.EndIf
	F.ODBC.conx!rstQTE.Close
F.Intrinsic.Control.Next(V.Local.i1)
F.Data.DataTable.Close("dtQte")

F.Intrinsic.Control.ExitSub

Program.Sub.Hook16884.End

Program.Sub.CaptureValues.Start
V.Local.sError.Declare(String)

V.Local.fCost.Declare
V.Local.fSum.Declare

V.Local.sDate.Declare
V.Local.sFile.Declare
V.Local.sFileName.Declare
V.Local.sPO.Declare
V.Local.sQuery.Declare
V.Local.bExists.Declare
V.Local.dPromDate.Declare

V.Local.sPO.set(Variable.Passed.000008)
F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)

F.Intrinsic.String.Format(V.Ambient.Date,"YYYYMMDD",V.Local.sDate)
F.Intrinsic.String.Concat(V.System.Temp,"\GSS\GAB_6454_",V.Caller.User,"_",V.Local.sDate,"_PO_", V.Local.sPO, ".txt",V.Local.sFileName)
F.Intrinsic.File.Exists(V.Local.sFileName,V.Local.bExists)

F.Intrinsic.Control.If(V.Local.bExists,=,True)
	F.Intrinsic.File.DeleteFile(V.Local.sFileName)
F.Intrinsic.Control.EndIf

V.Local.sFile.Set("")
'Prepare the list of PO header records (Terms, Due Date, and Discount) to be stored in GSS temp folder
F.Intrinsic.Control.If(V.Local.sFile.Trim,=,"")
	F.Intrinsic.Control.If(V.Local.sPO.Trim,<>,"0000000")

		F.Intrinsic.String.Concat("SELECT DISCOUNT_A, TERMS, DATE_DUE FROM PO_HEADER WHERE PURCHASE_ORDER = '",V.Local.sPO.Trim,"' AND REC_TYPE = 'A'",V.Local.sQuery)
		F.ODBC.Connection!conx.OpenLocalRecordsetRO("rstQTE",V.Local.sQuery)

		V.Local.sDate.Set(V.ODBC.conx!rstQTE.FieldValTrim!DATE_DUE)
		F.Intrinsic.Date.ConvertDString(V.Local.sDate,"MMDDYY",V.Local.dPromDate)
		F.Intrinsic.String.Format(V.Local.dPromDate,"YYYYMMDD",V.Local.sDate)

		F.Intrinsic.String.Concat(V.Local.sPO,"*!*",V.ODBC.conx!rstQTE.FieldValTrim!TERMS,"*!*",V.Local.sDate,"*!*",V.ODBC.conx!rstQTE.FieldValFloat!Discount_A,V.Local.sFile)
		F.ODBC.conx!rstQTE.Close
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sPO,"*!*",V.Local.sFile)	
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sFile)

F.Intrinsic.Control.ExitSub

Program.Sub.CaptureValues.End

Program.Sub.Comments.Start
${$0$}$GAB_6454_PO_REV$}$MHERTANTO$}$14/6/2015$}$False
${$1$}$$}$$}$6$}$10541$}$$}$14/6/2015 12:46:57 AM$}$PO Line Pre-Delete Hook
${$1$}$$}$$}$5$}$10531$}$$}$14/6/2015 12:46:41 AM$}$PO Line Pre-Save Hook
${$1$}$$}$$}$4$}$10922$}$$}$14/6/2015 12:46:27 AM$}$PO Pre-Save Hook
${$1$}$$}$$}$3$}$10950$}$$}$14/6/2015 12:46:14 AM$}$PO Exit Hook
${$1$}$$}$$}$2$}$10721$}$$}$14/6/2015 12:46:00 AM$}$PO Post-Load Hook
${$1$}$$}$$}$1$}$10710$}$$}$14/6/2015 12:45:36 AM$}$PO Populate Hook
${$1$}$$}$$}$0$}$10700$}$$}$14/6/2015 12:41:07 AM$}$PO Entry Hook
${$3$}$0$}$$}$-1$}$-1$}$$}$1/1/1900$}$This GAB script tracks changes made to a PO. The changes are stored into a new table called GAB_6454_PO_REV.
${$4$}$0$}$$}$11$}$-1$}$MHERTANTO$}$28/1/2016 12:49:01 AM$}$Major rewrite on the whole script (following GAB variable naming conventions and simplifications)
${$4$}$0$}$$}$10$}$-1$}$MHERTANTO$}$22/7/2015 5:31:48 PM$}$Add an IF statement on the first query to GAB_6454_PO_REV in addModifyLine and modifyHeader subroutines in order to prevent EOF when opening PO that is just created from estimating router. Before proceeding in both subroutines, if EOF then create a reference through addReference subroutine.
${$4$}$0$}$$}$9$}$-1$}$SUPERVSR$}$14/6/2015 12:44:21 AM$}$Add a new subroutine called deleteZZ, it is placed on entry hook to clear out any ZZ sequences generated by the user from previous opening of PO screen
${$4$}$0$}$$}$8$}$-1$}$SUPERVSR$}$24/5/2015 12:44:10 AM$}$Part number is shown in adding or deleting a line
${$4$}$0$}$$}$7$}$-1$}$SUPERVSR$}$24/5/2015 12:43:54 AM$}$In addReference, PO rev that is currently opened by a user has an extra ZZ seq
${$4$}$0$}$$}$6$}$-1$}$SUPERVSR$}$24/5/2015 12:43:38 AM$}$In addReference, a check point is created to detect if the selected rev is opened by another user
${$4$}$0$}$$}$5$}$-1$}$SUPERVSR$}$24/5/2015 12:43:20 AM$}$In deleteReference the deletion is modified to be based on seq ZZ and USERID. Also add the deletion of an empty rev 01
${$4$}$0$}$$}$4$}$-1$}$SUPERVSR$}$24/5/2015 12:43:07 AM$}$In addReference when the rev is greater than 01, the previous rev seq is changed to ZZ. Previosly the previous rev was deleted
${$4$}$0$}$$}$3$}$-1$}$SUPERVSR$}$20/5/2015 12:42:48 AM$}$Add a zero before decimal separators on discount percent
${$4$}$0$}$$}$2$}$-1$}$SUPERVSR$}$18/5/2015 12:42:32 AM$}$deleteReference has been modified to allow deletion of all PO reference rows which have no changes made
${$4$}$0$}$$}$1$}$-1$}$SUPERVSR$}$18/5/2015 12:42:17 AM$}$Adding part changes tracking in addModifyLine
${$4$}$0$}$$}$0$}$-1$}$SUPERVSR$}$18/5/2015 12:41:56 AM$}$Adding a new hook (10710) to change the label in Script 1 button
${$5$}$2.0.0.0$}$2
${$6$}$dyunus$}$20240326161304008$}$xZ6SHi8g7O0Qsxe6AiO2NH3PnOKQRy0TDVI4Qa5ZrXi9ccw36MPM9KDyBtILSpp5FWqnmEh8yUU=
Program.Sub.Comments.End

